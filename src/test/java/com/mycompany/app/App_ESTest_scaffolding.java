/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 16 22:43:25 GMT 2018
 */

package com.mycompany.app;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class App_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.mycompany.app.App"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/preich/projects/spoontransform"); 
    java.lang.System.setProperty("user.home", "/home/preich"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "preich"); 
    java.lang.System.setProperty("user.timezone", "Europe/Berlin"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(App_ESTest_scaffolding.class.getClassLoader() ,
      "com.martiansoftware.jsap.DefaultSource",
      "spoon.reflect.code.CtOperatorAssignment",
      "com.martiansoftware.jsap.stringparsers.FileStringParser",
      "spoon.reflect.factory.SubFactory",
      "spoon.reflect.code.CtSwitch",
      "spoon.reflect.cu.position.DeclarationSourcePosition",
      "spoon.reflect.factory.FactoryImpl$Dedup",
      "org.apache.commons.lang3.StringUtils",
      "spoon.reflect.code.CtUnaryOperator",
      "org.eclipse.jdt.internal.compiler.lookup.MethodScope",
      "org.eclipse.jdt.internal.compiler.ast.SuperReference",
      "spoon.support.compiler.jdt.CompilationUnitFilter",
      "org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
      "spoon.reflect.visitor.CtVisitable",
      "org.eclipse.jdt.internal.compiler.ast.TypeReference",
      "spoon.reflect.reference.CtIntersectionTypeReference",
      "com.martiansoftware.jsap.IDMap",
      "org.eclipse.jdt.internal.compiler.ast.ForeachStatement",
      "spoon.reflect.code.CtJavaDocTag$TagType",
      "spoon.reflect.code.CtSynchronized",
      "spoon.reflect.declaration.CtEnum",
      "spoon.reflect.code.CtIf",
      "spoon.processing.ProcessingManager",
      "org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference",
      "spoon.reflect.code.CtBreak",
      "org.apache.log4j.Hierarchy",
      "org.eclipse.jdt.internal.compiler.lookup.Binding",
      "spoon.reflect.declaration.CtEnumValue",
      "org.eclipse.jdt.internal.compiler.ast.BreakStatement",
      "org.eclipse.jdt.internal.compiler.impl.IrritantSet",
      "spoon.reflect.code.CtNewArray",
      "spoon.reflect.reference.CtLocalVariableReference",
      "spoon.reflect.cu.SourcePositionHolder",
      "com.martiansoftware.jsap.FlaggedOption",
      "org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression",
      "com.martiansoftware.jsap.stringparsers.FloatStringParser",
      "org.apache.log4j.spi.OptionHandler",
      "org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration",
      "org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding",
      "spoon.reflect.factory.CodeFactory",
      "spoon.reflect.code.CtCase",
      "spoon.reflect.code.UnaryOperatorKind",
      "org.apache.log4j.helpers.OptionConverter",
      "spoon.reflect.visitor.chain.CtFunction",
      "org.apache.commons.io.filefilter.IOFileFilter",
      "spoon.reflect.code.CtExecutableReferenceExpression",
      "spoon.reflect.reference.CtPackageReference",
      "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference",
      "spoon.reflect.cu.CompilationUnit$UNIT_TYPE",
      "spoon.reflect.code.CtBinaryOperator",
      "org.eclipse.jdt.internal.compiler.problem.ProblemSeverities",
      "org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference",
      "spoon.reflect.code.CtArrayAccess",
      "spoon.reflect.code.CtConditional",
      "org.eclipse.jdt.internal.compiler.ast.Statement",
      "spoon.support.compiler.jdt.TreeBuilderRequestor",
      "org.eclipse.jdt.internal.compiler.ast.OperatorExpression",
      "org.apache.log4j.Category",
      "spoon.support.visitor.GenericTypeAdapter",
      "spoon.reflect.factory.ConstructorFactory",
      "spoon.reflect.declaration.CtModifiable",
      "org.eclipse.jdt.internal.compiler.ast.CaseStatement",
      "com.martiansoftware.jsap.stringparsers.ShortStringParser",
      "org.eclipse.jdt.internal.compiler.ast.NormalAnnotation",
      "org.eclipse.jdt.internal.compiler.ast.BranchStatement",
      "org.eclipse.jdt.internal.compiler.ast.MessageSend",
      "org.eclipse.jdt.internal.compiler.ast.PostfixExpression",
      "com.martiansoftware.jsap.stringparsers.URLStringParser",
      "org.eclipse.jdt.internal.compiler.ast.Annotation",
      "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference",
      "spoon.support.modelobs.FineModelChangeListener",
      "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
      "org.eclipse.jdt.core.compiler.IProblem",
      "spoon.reflect.declaration.CtParameter",
      "com.martiansoftware.jsap.stringparsers.LongSizeStringParser",
      "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding",
      "spoon.reflect.factory.InterfaceFactory",
      "org.eclipse.jdt.internal.compiler.problem.AbortType",
      "org.eclipse.jdt.internal.compiler.ast.MagicLiteral",
      "com.martiansoftware.jsap.stringparsers.IntegerStringParser",
      "spoon.reflect.factory.ModuleFactory$CtUnnamedModule$1",
      "spoon.reflect.code.CtJavaDoc",
      "spoon.reflect.declaration.CtTypedElement",
      "spoon.SpoonAPI",
      "org.eclipse.jdt.internal.compiler.impl.ReferenceContext",
      "org.eclipse.jdt.internal.compiler.problem.AbortCompilation",
      "spoon.support.DefaultCoreFactory",
      "spoon.reflect.factory.EvalFactory",
      "spoon.reflect.code.CtVariableRead",
      "org.eclipse.jdt.internal.compiler.ast.Clinit",
      "org.eclipse.jdt.internal.compiler.ast.ImportReference",
      "spoon.reflect.declaration.CtAnonymousExecutable",
      "org.apache.log4j.spi.AppenderAttachable",
      "spoon.template.TemplateParameter",
      "spoon.reflect.declaration.CtAnnotationMethod",
      "com.martiansoftware.jsap.stringparsers.CharacterStringParser",
      "org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference",
      "spoon.reflect.code.CtRHSReceiver",
      "com.martiansoftware.jsap.UnspecifiedParameterException",
      "org.eclipse.jdt.internal.compiler.ast.UnionTypeReference",
      "com.martiansoftware.jsap.stringparsers.LongStringParser",
      "spoon.reflect.CtModel",
      "spoon.reflect.reference.CtFieldReference",
      "spoon.reflect.cu.position.NoSourcePosition",
      "org.eclipse.jdt.internal.compiler.ast.Initializer",
      "spoon.support.JavaOutputProcessor",
      "org.eclipse.jdt.internal.compiler.ast.Javadoc",
      "spoon.Launcher",
      "spoon.reflect.visitor.chain.CtConsumableFunction",
      "org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference",
      "spoon.processing.FactoryAccessor",
      "org.eclipse.jdt.internal.compiler.lookup.FieldBinding",
      "spoon.compiler.ModelBuildingException",
      "org.eclipse.jdt.internal.compiler.ast.MemberValuePair",
      "com.martiansoftware.jsap.stringparsers.PackageStringParser",
      "com.martiansoftware.jsap.Parser",
      "spoon.support.StandardEnvironment",
      "spoon.reflect.declaration.CtExecutable",
      "org.eclipse.jdt.internal.compiler.lookup.TypeConstants$CloseMethodRecord",
      "com.martiansoftware.jsap.IllegalMultipleDeclarationException",
      "spoon.reflect.declaration.CtModule",
      "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding",
      "spoon.support.reflect.declaration.CtElementImpl",
      "org.eclipse.jdt.internal.compiler.ast.SingleNameReference",
      "spoon.support.compiler.jdt.ContextBuilder",
      "org.eclipse.jdt.internal.compiler.ast.TryStatement",
      "spoon.reflect.factory.AnnotationFactory",
      "spoon.reflect.factory.CompilationUnitFactory",
      "org.eclipse.jdt.internal.compiler.ast.BinaryExpression",
      "org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend",
      "org.eclipse.jdt.internal.compiler.ast.StringLiteral",
      "spoon.reflect.visitor.EarlyTerminatingScanner",
      "org.eclipse.jdt.internal.compiler.ast.Invocation",
      "spoon.support.sniper.internal.ElementSourceFragment",
      "spoon.support.reflect.declaration.CtPackageImpl$2",
      "org.eclipse.jdt.internal.compiler.ast.LambdaExpression",
      "org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference",
      "org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement",
      "spoon.support.reflect.declaration.CtPackageImpl$1",
      "org.apache.log4j.helpers.Loader",
      "spoon.reflect.code.CtStatement",
      "spoon.support.compiler.jdt.PositionBuilder",
      "spoon.SpoonModelBuilder",
      "spoon.reflect.reference.CtExecutableReference",
      "org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement",
      "org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral",
      "spoon.reflect.code.CtNewClass",
      "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
      "org.eclipse.jdt.internal.compiler.ast.SwitchStatement",
      "com.martiansoftware.jsap.stringparsers.ByteStringParser",
      "spoon.reflect.visitor.chain.CtScannerListener",
      "spoon.reflect.code.CtTargetedExpression",
      "spoon.compiler.builder.JDTBuilder",
      "spoon.processing.FileGenerator",
      "org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference",
      "com.mycompany.app.App",
      "org.eclipse.jdt.internal.compiler.ast.FloatLiteral",
      "spoon.reflect.factory.MethodFactory",
      "spoon.reflect.code.CtBodyHolder",
      "spoon.reflect.declaration.ModifierKind",
      "spoon.reflect.code.CtFieldRead",
      "spoon.reflect.declaration.CtProvidedService",
      "org.eclipse.jdt.internal.compiler.ast.Literal",
      "com.martiansoftware.jsap.ExceptionMap",
      "com.martiansoftware.jsap.JSAP",
      "spoon.reflect.code.CtStatementList",
      "org.eclipse.jdt.internal.compiler.ast.Block",
      "org.eclipse.jdt.internal.compiler.lookup.InvocationSite",
      "spoon.reflect.CtModelImpl$CtRootPackage",
      "spoon.reflect.declaration.CtMultiTypedElement",
      "spoon.reflect.code.CtCatch",
      "spoon.reflect.factory.QueryFactory",
      "spoon.reflect.declaration.CtUsedService",
      "spoon.reflect.declaration.CtType",
      "org.eclipse.jdt.internal.compiler.ast.Expression",
      "org.eclipse.jdt.internal.compiler.ast.OperatorIds",
      "org.eclipse.jdt.internal.compiler.ast.ContinueStatement",
      "spoon.reflect.reference.CtReference",
      "org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement",
      "org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation",
      "org.eclipse.jdt.core.compiler.CategorizedProblem",
      "org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation",
      "org.eclipse.jdt.internal.compiler.lookup.TypeIds",
      "spoon.reflect.declaration.CtTypeInformation",
      "com.martiansoftware.jsap.JSAPResult",
      "spoon.reflect.code.CtAbstractInvocation",
      "org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression",
      "spoon.reflect.declaration.CtCodeSnippet",
      "spoon.reflect.code.CtReturn",
      "org.eclipse.jdt.internal.compiler.ast.Assignment",
      "com.martiansoftware.jsap.StringParser",
      "spoon.reflect.cu.CompilationUnit",
      "org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference",
      "org.apache.log4j.PropertyConfigurator",
      "spoon.reflect.code.CtCodeElement",
      "spoon.reflect.code.CtCatchVariable",
      "org.apache.log4j.spi.ThrowableRenderer",
      "spoon.support.compiler.jdt.ParentExiter",
      "spoon.compiler.Environment",
      "spoon.support.DefaultOutputDestinationHandler",
      "spoon.reflect.factory.TypeFactory",
      "spoon.reflect.factory.FactoryImpl",
      "com.martiansoftware.jsap.Option",
      "spoon.support.compiler.jdt.JDTBasedSpoonCompiler",
      "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding",
      "spoon.reflect.code.CtForEach",
      "org.eclipse.jdt.internal.compiler.ast.ForStatement",
      "spoon.reflect.declaration.CtImportKind",
      "spoon.reflect.factory.EnumFactory",
      "spoon.reflect.code.CtDo",
      "spoon.reflect.factory.Factory",
      "spoon.reflect.cu.position.BodyHolderSourcePosition",
      "spoon.processing.TraversalStrategy",
      "spoon.reflect.reference.CtTypeReference",
      "org.eclipse.jdt.internal.compiler.util.SuffixConstants",
      "org.eclipse.jdt.internal.compiler.problem.AbortMethod",
      "spoon.support.modelobs.EmptyModelChangeListener",
      "spoon.processing.ProcessInterruption",
      "spoon.reflect.code.CtComment$CommentType",
      "org.apache.log4j.spi.LoggerRepository",
      "org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference",
      "org.eclipse.jdt.internal.compiler.ast.FalseLiteral",
      "spoon.support.compiler.jdt.JDTTreeBuilderHelper",
      "spoon.reflect.declaration.CtNamedElement",
      "org.eclipse.jdt.internal.compiler.ast.CompoundAssignment",
      "com.mycompany.app.App$1",
      "org.eclipse.jdt.internal.compiler.ast.IntLiteral",
      "spoon.Launcher$1",
      "spoon.Launcher$2",
      "spoon.Launcher$4",
      "org.apache.log4j.Level",
      "org.eclipse.jdt.internal.compiler.ast.NameReference",
      "spoon.reflect.eval.PartialEvaluator",
      "com.martiansoftware.jsap.Flagged",
      "spoon.reflect.code.CtThisAccess",
      "spoon.reflect.visitor.chain.CtQuery",
      "org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration",
      "spoon.reflect.reference.CtTypeParameterReference",
      "spoon.SpoonModelBuilder$InputType",
      "spoon.support.compiler.jdt.JDTBatchCompiler",
      "spoon.OutputType",
      "org.eclipse.jdt.internal.compiler.CompilationResult",
      "spoon.reflect.code.CtCodeSnippetExpression",
      "org.eclipse.jdt.internal.compiler.ast.NumberLiteral",
      "spoon.reflect.reference.CtVariableReference",
      "spoon.processing.AbstractProcessor",
      "spoon.reflect.code.CtFieldWrite",
      "spoon.reflect.cu.position.CompoundSourcePosition",
      "org.eclipse.jdt.internal.compiler.ast.ThisReference",
      "spoon.reflect.declaration.CtMethod",
      "spoon.reflect.code.CtLocalVariable",
      "org.eclipse.jdt.internal.compiler.lookup.BlockScope",
      "org.eclipse.jdt.internal.compiler.ast.AssertStatement",
      "org.eclipse.jdt.internal.compiler.ast.LongLiteral",
      "com.martiansoftware.jsap.stringparsers.BigDecimalStringParser",
      "org.eclipse.jdt.internal.compiler.lookup.ClassScope",
      "spoon.reflect.code.CtExpression",
      "org.eclipse.jdt.internal.compiler.ast.Wildcard",
      "org.eclipse.jdt.internal.compiler.ast.ReferenceExpression",
      "org.eclipse.jdt.internal.compiler.ast.PrefixExpression",
      "org.eclipse.jdt.internal.compiler.ast.IfStatement",
      "spoon.reflect.code.CtLambda",
      "com.martiansoftware.jsap.SyntaxException",
      "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment",
      "spoon.reflect.declaration.CtConstructor",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "spoon.reflect.factory.ExecutableFactory",
      "spoon.reflect.code.CtCodeSnippetStatement",
      "spoon.support.CompressionType",
      "org.eclipse.jdt.internal.compiler.ast.EqualExpression",
      "spoon.reflect.declaration.CtVariable",
      "spoon.reflect.declaration.CtPackageExport",
      "org.eclipse.jdt.internal.compiler.ast.NullLiteral",
      "com.martiansoftware.jsap.Parameter",
      "spoon.reflect.code.CtConstructorCall",
      "com.martiansoftware.jsap.stringparsers.InetAddressStringParser",
      "spoon.reflect.code.CtTry",
      "spoon.reflect.code.CtLiteral",
      "org.eclipse.jdt.internal.compiler.ast.CastExpression",
      "org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference",
      "org.apache.log4j.or.ObjectRenderer",
      "spoon.reflect.code.CtVariableWrite",
      "spoon.reflect.code.CtFor",
      "org.eclipse.jdt.internal.compiler.lookup.ModuleBinding",
      "org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration",
      "spoon.reflect.code.BinaryOperatorKind",
      "spoon.reflect.code.CtTypeAccess",
      "com.martiansoftware.jsap.stringparsers.IntSizeStringParser",
      "org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference",
      "spoon.reflect.reference.CtActualTypeContainer",
      "spoon.reflect.code.CtContinue",
      "org.eclipse.jdt.internal.compiler.lookup.VariableBinding",
      "spoon.support.visitor.HashcodeVisitor",
      "spoon.reflect.declaration.ParentNotInitializedException",
      "spoon.support.reflect.declaration.CtElementImpl$2",
      "spoon.reflect.code.CtAnnotationFieldAccess",
      "com.martiansoftware.jsap.QualifiedSwitch",
      "spoon.reflect.reference.CtCatchVariableReference",
      "com.martiansoftware.jsap.stringparsers.ClassStringParser",
      "spoon.support.compiler.VirtualFolder",
      "spoon.processing.Processor",
      "org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.eclipse.jdt.internal.compiler.lookup.SourceModuleBinding",
      "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression",
      "org.eclipse.jdt.internal.compiler.ast.ArrayReference",
      "spoon.support.Experimental",
      "org.eclipse.jdt.internal.compiler.ast.ConditionalExpression",
      "org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression",
      "org.eclipse.jdt.internal.compiler.ast.ReturnStatement",
      "spoon.reflect.declaration.CtTypeMember",
      "org.eclipse.jdt.internal.compiler.ast.DoubleLiteral",
      "spoon.reflect.code.CtComment",
      "org.eclipse.jdt.internal.compiler.ast.ASTNode",
      "org.eclipse.jdt.internal.compiler.ast.IPolyExpression",
      "org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit",
      "spoon.reflect.declaration.CtAnnotatedElementType",
      "spoon.reflect.reference.CtArrayTypeReference",
      "org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference",
      "spoon.reflect.visitor.chain.ScanningMode",
      "spoon.support.reflect.declaration.CtModuleImpl",
      "spoon.reflect.factory.PackageFactory",
      "spoon.reflect.CtModelImpl",
      "spoon.reflect.visitor.PrettyPrinter",
      "org.eclipse.jdt.internal.compiler.ast.UnaryExpression",
      "com.martiansoftware.jsap.stringparsers.DoubleStringParser",
      "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1",
      "org.eclipse.jdt.internal.compiler.ICompilerRequestor",
      "spoon.processing.ProcessorProperties",
      "org.apache.log4j.Priority",
      "spoon.reflect.declaration.CtAnnotation",
      "org.eclipse.jdt.internal.compiler.lookup.TypeConstants",
      "spoon.support.compiler.SpoonProgress",
      "spoon.reflect.factory.ModuleFactory$CtUnnamedModule",
      "spoon.reflect.factory.ModuleFactory",
      "org.apache.log4j.LogManager",
      "spoon.compiler.SpoonFile",
      "org.eclipse.jdt.internal.compiler.env.IUpdatableModule",
      "com.mycompany.app.App$Singleton",
      "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope",
      "spoon.support.compiler.jdt.ReferenceBuilder",
      "com.martiansoftware.jsap.RequiredParameterMissingException",
      "org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess",
      "spoon.reflect.factory.FactoryImpl$1",
      "spoon.reflect.code.CtJavaDocTag",
      "org.apache.log4j.DefaultCategoryFactory",
      "spoon.reflect.factory.FactoryImpl$2",
      "spoon.reflect.visitor.CtScanner",
      "spoon.reflect.path.CtRole",
      "org.apache.log4j.or.RendererMap",
      "spoon.reflect.declaration.CtElement",
      "spoon.reflect.declaration.CtModuleRequirement",
      "spoon.reflect.code.CtAssert",
      "org.eclipse.jdt.internal.compiler.lookup.TypeBinding",
      "org.eclipse.jdt.internal.compiler.ast.CharLiteral",
      "org.eclipse.jdt.internal.compiler.ast.LabeledStatement",
      "spoon.reflect.declaration.CtImport",
      "spoon.reflect.declaration.CtField",
      "org.eclipse.jdt.internal.compiler.lookup.ProblemReasons",
      "spoon.SpoonException",
      "spoon.reflect.reference.CtParameterReference",
      "org.eclipse.jdt.internal.compiler.ast.WhileStatement",
      "spoon.reflect.code.CtFieldAccess",
      "org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding",
      "org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference",
      "spoon.reflect.code.CtTryWithResource",
      "org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding",
      "org.apache.log4j.CategoryKey",
      "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
      "org.eclipse.jdt.internal.compiler.env.INameEnvironment",
      "spoon.Launcher$CLASSPATH_MODE",
      "spoon.processing.ProblemFixer",
      "spoon.support.OutputDestinationHandler",
      "org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression",
      "com.martiansoftware.jsap.stringparsers.BooleanStringParser",
      "spoon.reflect.code.CtThrow",
      "spoon.reflect.declaration.CtPackage",
      "spoon.reflect.reference.CtWildcardReference",
      "org.apache.log4j.ProvisionNode",
      "spoon.support.util.EmptyClearableList",
      "org.eclipse.jdt.internal.compiler.ast.FunctionalExpression",
      "com.martiansoftware.jsap.stringparsers.ColorStringParser",
      "spoon.reflect.visitor.Filter",
      "org.eclipse.jdt.internal.compiler.ast.TrueLiteral",
      "spoon.support.reflect.declaration.CtNamedElementImpl",
      "spoon.support.sniper.internal.SourceFragment",
      "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference",
      "com.martiansoftware.jsap.stringparsers.BigIntegerStringParser",
      "org.eclipse.jdt.internal.compiler.lookup.Scope",
      "org.apache.log4j.spi.RootLogger",
      "org.eclipse.jdt.internal.compiler.ast.AllocationExpression",
      "org.eclipse.jdt.internal.compiler.ast.ArrayInitializer",
      "org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression",
      "spoon.reflect.visitor.CtInheritanceScanner",
      "org.apache.log4j.spi.ErrorHandler",
      "com.martiansoftware.jsap.stringparsers.EnumeratedStringParser",
      "spoon.support.reflect.declaration.CtPackageImpl",
      "org.eclipse.jdt.internal.compiler.ast.Reference",
      "org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall",
      "spoon.support.compiler.jdt.JDTTreeBuilder",
      "org.apache.log4j.spi.RendererSupport",
      "spoon.reflect.declaration.CtModuleDirective",
      "com.martiansoftware.jsap.UnflaggedOption",
      "com.martiansoftware.jsap.Defaults",
      "spoon.reflect.reference.CtUnboundVariableReference",
      "com.martiansoftware.jsap.JSAPException",
      "spoon.reflect.code.CtSuperAccess",
      "spoon.reflect.declaration.CtInterface",
      "spoon.reflect.factory.FieldFactory",
      "spoon.reflect.visitor.CtVisitor",
      "org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference",
      "org.apache.log4j.Logger",
      "spoon.reflect.code.CtArrayWrite",
      "org.eclipse.jdt.internal.compiler.ASTVisitor",
      "spoon.compiler.SpoonFolder",
      "org.eclipse.jdt.internal.compiler.ast.FieldDeclaration",
      "org.apache.log4j.helpers.LogLog",
      "spoon.compiler.InvalidClassPathException",
      "spoon.reflect.factory.CoreFactory",
      "com.mycompany.app.App$MyGoodClass",
      "org.eclipse.jdt.internal.compiler.ast.Argument",
      "org.eclipse.jdt.internal.compiler.ast.EmptyStatement",
      "spoon.support.comparator.QualifiedNameComparator",
      "spoon.reflect.code.CtAssignment",
      "org.eclipse.jdt.internal.compiler.batch.Main",
      "org.apache.log4j.spi.RepositorySelector",
      "org.eclipse.jdt.internal.compiler.ast.TypeParameter",
      "com.mycompany.app.App$MyInterface",
      "spoon.reflect.code.CtLabelledFlowBreak",
      "spoon.reflect.code.CtVariableAccess",
      "spoon.reflect.cu.SourcePosition",
      "spoon.reflect.code.CtBlock",
      "org.apache.log4j.or.DefaultRenderer",
      "spoon.reflect.declaration.CtFormalTypeDeclarer",
      "org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference",
      "spoon.reflect.path.CtPath",
      "org.eclipse.jdt.internal.compiler.ast.FieldReference",
      "com.martiansoftware.jsap.ParseException",
      "spoon.support.util.ModelSet",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "spoon.reflect.factory.ClassFactory",
      "org.apache.log4j.Appender",
      "spoon.compiler.SpoonResource",
      "spoon.reflect.reference.CtModuleReference",
      "com.martiansoftware.jsap.UnknownFlagException",
      "com.martiansoftware.jsap.stringparsers.StringStringParser",
      "spoon.reflect.declaration.CtShadowable",
      "spoon.support.compiler.SnippetCompilationError",
      "spoon.reflect.code.CtLoop",
      "spoon.reflect.visitor.chain.CtQueryable",
      "org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression",
      "org.eclipse.jdt.internal.compiler.ast.DoStatement",
      "org.apache.log4j.spi.HierarchyEventListener",
      "spoon.reflect.code.CtInvocation",
      "org.eclipse.jdt.internal.compiler.ast.ThrowStatement",
      "org.apache.log4j.spi.LoggingEvent",
      "spoon.reflect.declaration.CtTypeParameter",
      "org.eclipse.jdt.internal.compiler.ast.LocalDeclaration",
      "org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration",
      "com.martiansoftware.jsap.Switch",
      "spoon.reflect.code.CtCFlowBreak",
      "spoon.reflect.code.CtArrayRead",
      "spoon.reflect.code.CtWhile",
      "spoon.reflect.declaration.CtClass",
      "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration",
      "com.martiansoftware.jsap.PropertyStringParser",
      "spoon.reflect.declaration.CtAnnotationType"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(App_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.mycompany.app.App",
      "com.mycompany.app.App$Singleton",
      "spoon.processing.AbstractProcessor",
      "com.mycompany.app.App$1",
      "spoon.reflect.path.CtRole",
      "com.mycompany.app.App$MyGoodClass",
      "com.martiansoftware.jsap.StringParser",
      "com.martiansoftware.jsap.stringparsers.BigDecimalStringParser",
      "com.martiansoftware.jsap.stringparsers.BigIntegerStringParser",
      "com.martiansoftware.jsap.stringparsers.BooleanStringParser",
      "com.martiansoftware.jsap.stringparsers.ByteStringParser",
      "com.martiansoftware.jsap.stringparsers.CharacterStringParser",
      "com.martiansoftware.jsap.stringparsers.ClassStringParser",
      "com.martiansoftware.jsap.stringparsers.ColorStringParser",
      "com.martiansoftware.jsap.stringparsers.DoubleStringParser",
      "com.martiansoftware.jsap.stringparsers.FloatStringParser",
      "com.martiansoftware.jsap.stringparsers.InetAddressStringParser",
      "com.martiansoftware.jsap.stringparsers.IntegerStringParser",
      "com.martiansoftware.jsap.stringparsers.IntSizeStringParser",
      "com.martiansoftware.jsap.stringparsers.LongSizeStringParser",
      "com.martiansoftware.jsap.stringparsers.LongStringParser",
      "com.martiansoftware.jsap.stringparsers.PackageStringParser",
      "com.martiansoftware.jsap.stringparsers.ShortStringParser",
      "com.martiansoftware.jsap.stringparsers.StringStringParser",
      "com.martiansoftware.jsap.stringparsers.URLStringParser",
      "com.martiansoftware.jsap.JSAP",
      "com.martiansoftware.jsap.Parameter",
      "com.martiansoftware.jsap.Switch",
      "com.martiansoftware.jsap.Option",
      "com.martiansoftware.jsap.FlaggedOption",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "com.martiansoftware.jsap.PropertyStringParser",
      "com.martiansoftware.jsap.stringparsers.FileStringParser",
      "spoon.OutputType",
      "spoon.Launcher$CLASSPATH_MODE",
      "org.apache.commons.lang3.StringUtils",
      "com.martiansoftware.jsap.stringparsers.EnumeratedStringParser",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "spoon.Launcher$1",
      "spoon.Launcher$2",
      "spoon.Launcher",
      "spoon.reflect.factory.FactoryImpl",
      "spoon.reflect.factory.SubFactory",
      "spoon.support.DefaultCoreFactory",
      "spoon.support.StandardEnvironment",
      "spoon.support.modelobs.EmptyModelChangeListener",
      "spoon.support.DefaultOutputDestinationHandler",
      "spoon.support.CompressionType",
      "spoon.reflect.factory.FactoryImpl$1",
      "spoon.reflect.CtModelImpl",
      "spoon.support.util.EmptyClearableList",
      "spoon.reflect.cu.position.NoSourcePosition",
      "spoon.reflect.cu.SourcePosition",
      "spoon.reflect.factory.ModuleFactory$CtUnnamedModule$1",
      "spoon.reflect.visitor.CtInheritanceScanner",
      "spoon.support.visitor.HashcodeVisitor",
      "spoon.support.reflect.declaration.CtPackageImpl",
      "spoon.reflect.CtModelImpl$CtRootPackage",
      "spoon.support.util.ModelSet",
      "spoon.support.reflect.declaration.CtPackageImpl$1",
      "spoon.support.comparator.QualifiedNameComparator",
      "spoon.support.reflect.declaration.CtPackageImpl$2",
      "spoon.support.reflect.declaration.CtElementImpl",
      "spoon.support.reflect.declaration.CtNamedElementImpl",
      "spoon.support.reflect.declaration.CtModuleImpl",
      "spoon.reflect.factory.ModuleFactory$CtUnnamedModule",
      "spoon.reflect.factory.FactoryImpl$Dedup",
      "com.martiansoftware.jsap.Parser",
      "com.martiansoftware.jsap.JSAPResult",
      "com.martiansoftware.jsap.IDMap",
      "com.martiansoftware.jsap.Defaults",
      "spoon.Launcher$4",
      "spoon.support.compiler.jdt.JDTBasedSpoonCompiler",
      "spoon.support.compiler.jdt.TreeBuilderRequestor",
      "spoon.support.compiler.VirtualFolder",
      "spoon.SpoonException"
    );
  }
}
